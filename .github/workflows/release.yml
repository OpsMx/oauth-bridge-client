name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.6'

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

      - name: Build binaries
        run: |
          # Build for multiple platforms
          GOOS=linux GOARCH=amd64 go build -o bin/oauth-bridge-linux-amd64 ./cmd/oauth-bridge
          GOOS=linux GOARCH=arm64 go build -o bin/oauth-bridge-linux-arm64 ./cmd/oauth-bridge
          GOOS=darwin GOARCH=amd64 go build -o bin/oauth-bridge-darwin-amd64 ./cmd/oauth-bridge
          GOOS=darwin GOARCH=arm64 go build -o bin/oauth-bridge-darwin-arm64 ./cmd/oauth-bridge
          GOOS=windows GOARCH=amd64 go build -o bin/oauth-bridge-windows-amd64.exe ./cmd/oauth-bridge

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: OAuth Bridge ${{ steps.version.outputs.version }}
          body: |
            ## OAuth Bridge ${{ steps.version.outputs.version }}
            
            A secure OAuth bridge service for GitHub App installations in on-premises SSD environments.
            
            ### What's New
            - Clean single-module architecture
            - Simplified client SDK import: `github.com/OpsMx/oauth-bridge`
            - Enhanced ECC JWT authentication
            - Zero-ingress security architecture
            
            ### Installation
            
            **Client SDK:**
            ```bash
            go get github.com/OpsMx/oauth-bridge@${{ steps.version.outputs.version }}
            ```
            
            **Server Binaries:**
            Download the appropriate binary for your platform from the assets below.
            
            ### Usage
            
            **Client SDK:**
            ```go
            import "github.com/OpsMx/oauth-bridge"
            
            client, err := oauthbridge.NewClient("my-service")
            ```
            
            **Server:**
            ```bash
            ./oauth-bridge -configFile /app/config/oauth-bridge.yaml
            ```
            
            See the [README](https://github.com/OpsMx/oauth-bridge/blob/main/README.md) for complete documentation.
          draft: false
          prerelease: false

      - name: Upload binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: bin/oauth-bridge-linux-amd64
          asset_name: oauth-bridge-linux-amd64
          asset_content_type: application/octet-stream

      # Add more upload steps for other platforms as needed